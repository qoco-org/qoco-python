# Taken from osqp-python

name: Build Wheels

on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
      - "*"
      - "*/*"
      - "**"
  pull_request:
    branches: [main]

jobs:
  build_sdist:
    name: Build source
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
        with:
          submodules: "recursive"

      - name: Build source
        run: |
          python -m pip install build
          python -m build --sdist --outdir=wheelhouse

      - name: Upload sdist to github
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: wheelhouse/*.tar.gz
          if-no-files-found: error

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.20.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  publish_to_pypi:
    name: Publish wheels to PyPi
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: Print out packages
        run: ls -la dist/*

      - name: Upload wheels to pypi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}
          TWINE_REPOSITORY: testpypi
        run: |
          python -m pip install --upgrade twine
          twine upload dist/*
